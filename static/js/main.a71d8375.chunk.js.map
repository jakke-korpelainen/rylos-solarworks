{"version":3,"sources":["3d/Stars.js","images/earth.jpg","images/moon.png","3d/Planets.js","3d/Effects.js","audio/laser.mp3","audio/engine.mp3","audio/engine2.mp3","audio/warp.mp3","audio/click.mp3","audio/explosion.mp3","images/rylos-freak-lust.png","audio/rylos-freak-lust.wav","images/rylos-misunderstood.jpg","audio/rylos-misunderstood.wav","images/rylos-road.png","audio/rylos-road.wav","images/rylos-climate.jpg","audio/rylos-climate.wav","audio/index.js","store.js","3d/Particles.js","3d/Rocks.js","3d/Explosions.js","3d/Track.js","3d/Ship.js","3d/Rig.js","images/rewind.svg","images/play.svg","Radio.js","Hud.js","images/rylos-logo.png","App.js","index.js"],"names":["Stars","count","positions","useMemo","i","r","theta","Math","PI","random","phi","acos","x","cos","sin","y","z","push","Float32Array","attachObject","length","array","itemSize","size","sizeAttenuation","color","fog","Planets","ref","useRef","useLoader","THREE","earthImg","moonImg","texture","moon","scale","position","args","map","roughness","distance","intensity","Effects","composer","useThree","scene","gl","camera","useEffect","current","setSize","width","height","useFrame","render","attachArray","undefined","extend","EffectComposer","ShaderPass","RenderPass","UnrealBloomPass","FilmPass","mp3","explosion","explosionAudio","soundTrack","songName","songCover","rylosFreakLustCover","songSrc","rylosFreakLustSong","rylosMisunderstoodCover","rylosMisunderstoodSong","rylosRoadCover","rylosRoadSong","rylosClimateCover","rylosClimateSong","zap","Audio","zapAudio","engine","engineAudio","engine2","engine2Audio","warp","warpAudio","click","clickAudio","guid","useStore","create","set","get","spline","Curves","GrannyKnot","track","cancelLaserTO","cancelExplosionTO","box","currentTrackIndex","menu","points","health","lasers","explosions","rocks","randomData","enemies","immunity","mutation","t","startTime","Date","now","fov","hits","rings","randomRings","particles","looptime","binormal","normal","clock","mouse","dummy","ray","actions","start","init","playAudio","audio","addEffect","setTimeout","time","parameters","path","getPointAt","multiplyScalar","warping","filter","test","e","a","concat","previous","updates","data","state","clearTimeout","rock","find","enemy","rockCollisions","max","shoot","updateMouse","clientX","clientY","window","innerWidth","innerHeight","min","copy","offset","expandByScalar","hit","result","intersectBox","origin","distanceTo","radius","Array","fill","pos","clone","add","speed","temp","pickt","tangents","pick","floor","lookAt","getLength","matrix","binormals","toArray","reset","setState","volume","loop","currentTime","play","Particles","instancedMesh","forEach","particle","rotation","updateMatrix","setMatrixAt","instanceMatrix","needsUpdate","frustumCulled","Rocks","gltf","GLTFLoader","Rock","key","React","memo","nodes","materials","getElapsedTime","err","geometry","node_id4_Material_52_0","material","Material_52","make","createRef","normalize","Explosions","Explosion","group","type","mesh","children","vec","opacity","index","transparent","Track","lightgreen","hotpink","laserMaterial","crossMaterial","direction","Ship","main","laserGroup","laserLight","exhaust","cross","target","getWorldPosition","getWorldDirection","negate","visible","name","renderOrder","Rig","rig","segments","pickNext","subVectors","dir","getTangentAt","quaternion","setFromRotationMatrix","updateProjectionMatrix","lightPos","Radio","useState","currentSoundtrackIndex","setCurrentSoundtrackIndex","audioElement","currentTrack","pause","setAttribute","load","id","onClick","src","rewindIcon","duration","paused","playIcon","Hud","toggle","sound","toggleSound","score","toFixed","UpperLeft","style","backgroundColor","UpperRight","href","LowerLeft","Global","LowerRight","base","css","styled","div","createGlobalStyle","Menu","props","backgroundImage","rylosLogo","App","onPointerMove","linear","mode","dpr","antialias","near","far","onCreated","toneMapping","setClearColor","attach","fallback","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a71d8375.chunk.js","sourcesContent":["import React, { useMemo } from 'react'\n\nexport default function Stars({ count = 2000 }) {\n  const positions = useMemo(() => {\n    let positions = []\n    for (let i = 0; i < count; i++) {\n      const r = 4000\n      const theta = 2 * Math.PI * Math.random()\n      const phi = Math.acos(2 * Math.random() - 1)\n      const x = r * Math.cos(theta) * Math.sin(phi) + (-2000 + Math.random() * 4000)\n      const y = r * Math.sin(theta) * Math.sin(phi) + (-2000 + Math.random() * 4000)\n      const z = r * Math.cos(phi) + (-1000 + Math.random() * 2000)\n      positions.push(x)\n      positions.push(y)\n      positions.push(z)\n    }\n    return new Float32Array(positions)\n  }, [count])\n  return (\n    <points>\n      <bufferGeometry>\n        <bufferAttribute attachObject={['attributes', 'position']} count={positions.length / 3} array={positions} itemSize={3} />\n      </bufferGeometry>\n      <pointsMaterial size={15} sizeAttenuation color=\"white\" fog={false} />\n    </points>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/earth.45ed3b77.jpg\";","export default __webpack_public_path__ + \"static/media/moon.27019542.png\";","import * as THREE from 'three'\nimport React, { useRef } from 'react'\nimport { useLoader } from '@react-three/fiber'\nimport earthImg from '../images/earth.jpg'\nimport moonImg from '../images/moon.png'\n\nexport default function Planets() {\n  const ref = useRef()\n  const [texture, moon] = useLoader(THREE.TextureLoader, [earthImg, moonImg])\n  return (\n    <group ref={ref} scale={[100, 100, 100]} position={[-500, -500, 1000]}>\n      <mesh>\n        <sphereGeometry args={[5, 32, 32]} />\n        <meshStandardMaterial map={texture} roughness={1} fog={false} />\n      </mesh>\n      <mesh position={[5, -5, -5]}>\n        <sphereGeometry args={[0.75, 32, 32]} />\n        <meshStandardMaterial roughness={1} map={moon} fog={false} />\n      </mesh>\n      <pointLight position={[-5, -5, -5]} distance={1000} intensity={6} />\n      <mesh position={[-30, -10, -60]}>\n        <sphereGeometry args={[4, 32, 32]} />\n        <meshBasicMaterial color=\"#FFFF99\" fog={false} />\n        <pointLight distance={6100} intensity={50} color=\"white\" />\n      </mesh>\n    </group>\n  )\n}\n","import React, { useRef, useEffect } from 'react'\nimport { extend, useThree, useFrame } from '@react-three/fiber'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass'\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass'\nimport { FilmPass } from 'three/examples/jsm/postprocessing/FilmPass'\n\nextend({ EffectComposer, ShaderPass, RenderPass, UnrealBloomPass, FilmPass })\n\nexport default function Effects() {\n  const composer = useRef()\n  const { scene, gl, size, camera } = useThree()\n  useEffect(() => void composer.current.setSize(size.width, size.height), [size])\n  useFrame(() => composer.current.render(), 2)\n  return (\n    <effectComposer ref={composer} args={[gl]}>\n      <renderPass attachArray=\"passes\" scene={scene} camera={camera} />\n      <unrealBloomPass attachArray=\"passes\" args={[undefined, 1.8, 1, 0]} />\n    </effectComposer>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/laser.373d639d.mp3\";","export default __webpack_public_path__ + \"static/media/engine.75bbe12e.mp3\";","export default __webpack_public_path__ + \"static/media/engine2.87c3c40a.mp3\";","export default __webpack_public_path__ + \"static/media/warp.1f9bec85.mp3\";","export default __webpack_public_path__ + \"static/media/click.db461987.mp3\";","export default __webpack_public_path__ + \"static/media/explosion.615cfd43.mp3\";","export default __webpack_public_path__ + \"static/media/rylos-freak-lust.d42472e3.png\";","export default __webpack_public_path__ + \"static/media/rylos-freak-lust.d76d5f45.wav\";","export default __webpack_public_path__ + \"static/media/rylos-misunderstood.d13d9c2d.jpg\";","export default __webpack_public_path__ + \"static/media/rylos-misunderstood.7b35538c.wav\";","export default __webpack_public_path__ + \"static/media/rylos-road.86b24c20.png\";","export default __webpack_public_path__ + \"static/media/rylos-road.982dbc79.wav\";","export default __webpack_public_path__ + \"static/media/rylos-climate.f7a8098a.jpg\";","export default __webpack_public_path__ + \"static/media/rylos-climate.64e4640e.wav\";","import zapAudio from './laser.mp3'\nimport engineAudio from './engine.mp3'\nimport engine2Audio from './engine2.mp3'\nimport warpAudio from './warp.mp3'\nimport clickAudio from './click.mp3'\nimport explosionAudio from './explosion.mp3'\n\nimport rylosFreakLustCover from '../images/rylos-freak-lust.png'\nimport rylosFreakLustSong from './rylos-freak-lust.wav'\n\nimport rylosMisunderstoodCover from '../images/rylos-misunderstood.jpg'\nimport rylosMisunderstoodSong from './rylos-misunderstood.wav'\n\nimport rylosRoadCover from '../images/rylos-road.png'\nimport rylosRoadSong from './rylos-road.wav'\n\nimport rylosClimateCover from '../images/rylos-climate.jpg'\nimport rylosClimateSong from './rylos-climate.wav'\n\nconst mp3 = { explosion: explosionAudio }\n\nconst soundTrack = [\n  { songName: 'Rylos - Freak Lust', songCover: rylosFreakLustCover, songSrc: rylosFreakLustSong },\n  {\n    songName: 'Rylos - Misunderstood',\n    songCover: rylosMisunderstoodCover,\n    songSrc: rylosMisunderstoodSong\n  },\n  {\n    songName: 'Rylos - Road',\n    songCover: rylosRoadCover,\n    songSrc: rylosRoadSong\n  },\n  {\n    songName: 'Rylos - Climate',\n    songCover: rylosClimateCover,\n    songSrc: rylosClimateSong\n  }\n]\n\nconst zap = new Audio(zapAudio)\nconst engine = new Audio(engineAudio)\nconst engine2 = new Audio(engine2Audio)\nconst warp = new Audio(warpAudio)\nconst click = new Audio(clickAudio)\nconst explosion = new Audio(explosionAudio)\n\nexport { soundTrack, zap, engine, engine2, warp, click, explosion, mp3 }\n","import * as THREE from 'three'\nimport { Curves } from 'three/examples/jsm/curves/CurveExtras'\nimport { addEffect } from '@react-three/fiber'\nimport create from 'zustand'\nimport * as audio from './audio'\n\nlet guid = 1\n\nconst useStore = create((set, get) => {\n  let spline = new Curves.GrannyKnot()\n  let track = new THREE.TubeBufferGeometry(spline, 250, 0.2, 10, true)\n  let cancelLaserTO = undefined\n  let cancelExplosionTO = undefined\n  const box = new THREE.Box3()\n\n  return {\n    currentTrackIndex: 0,\n    menu: undefined,\n    camera: undefined,\n    points: 0,\n    health: 100,\n    lasers: [],\n    explosions: [],\n    rocks: randomData(100, track, 150, 8, () => 1 + Math.random() * 2.5),\n    enemies: randomData(10, track, 20, 15, 1),\n    immunity: true,\n\n    mutation: {\n      t: 0,\n      position: new THREE.Vector3(),\n      startTime: Date.now(),\n\n      track,\n      scale: 15,\n      fov: 70,\n      hits: false,\n      rings: randomRings(30, track),\n      particles: randomData(1500, track, 100, 1, () => 0.5 + Math.random() * 0.8),\n      looptime: 40 * 1000,\n      binormal: new THREE.Vector3(),\n      normal: new THREE.Vector3(),\n      clock: new THREE.Clock(false),\n      mouse: new THREE.Vector2(-250, 50),\n\n      // Re-usable objects\n      dummy: new THREE.Object3D(),\n      ray: new THREE.Ray(),\n      box: new THREE.Box3()\n    },\n\n    actions: {\n      start() {\n        set({ menu: 'game' })\n      },\n      init(camera) {\n        const { mutation, actions } = get()\n\n        set({ camera })\n        mutation.clock.start()\n\n        playAudio(audio.engine, 1, true)\n        playAudio(audio.engine2, 0.3, true)\n\n        addEffect(() => {\n          const { immunity } = get()\n          if (immunity) {\n            setTimeout(() => set({ immunity: false }), 5000)\n          }\n        })\n\n        addEffect(() => {\n          const { rocks, enemies, immunity } = get()\n\n          const time = Date.now()\n          const t = (mutation.t = ((time - mutation.startTime) % mutation.looptime) / mutation.looptime)\n          mutation.position = track.parameters.path.getPointAt(t)\n          mutation.position.multiplyScalar(mutation.scale)\n\n          // test for wormhole/warp\n          let warping = false\n          if (t > 0.3 && t < 0.4) {\n            if (!warping) {\n              warping = true\n              playAudio(audio.warp)\n            }\n          } else if (t > 0.5) warping = false\n\n          // test for hits\n          const r = rocks.filter(actions.test)\n          const e = enemies.filter(actions.test)\n          const a = r.concat(e)\n          const previous = mutation.hits\n          mutation.hits = a.length\n          if (previous === 0 && mutation.hits) playAudio(audio.click)\n          const lasers = get().lasers\n          if (mutation.hits && lasers.length && time - lasers[lasers.length - 1] < 100) {\n            const updates = a.map((data) => ({ time: Date.now(), ...data }))\n            set((state) => ({ explosions: [...state.explosions, ...updates] }))\n            clearTimeout(cancelExplosionTO)\n            cancelExplosionTO = setTimeout(() => set((state) => ({ explosions: state.explosions.filter(({ time }) => Date.now() - time <= 1000) })), 1000)\n            set((state) => ({\n              points: state.points + r.length * 100 + e.length * 200,\n              rocks: state.rocks.filter((rock) => !r.find((r) => r.guid === rock.guid)),\n              enemies: state.enemies.filter((enemy) => !e.find((e) => e.guid === enemy.guid))\n            }))\n          }\n\n          const rockCollisions = r.filter((data) => data.distance < 15)\n\n          if (rockCollisions.length > 0) {\n            const updates = rockCollisions.map((data) => ({ time: Date.now(), ...data }))\n            set((state) => ({ explosions: [...state.explosions, ...updates] }))\n            clearTimeout(cancelExplosionTO)\n            cancelExplosionTO = setTimeout(() => set((state) => ({ explosions: state.explosions.filter(({ time }) => Date.now() - time <= 1000) })), 1000)\n            set((state) => ({\n              rocks: state.rocks.filter((rock) => !rockCollisions.find((r) => r.guid === rock.guid))\n            }))\n\n            if (immunity === false) {\n              set((state) => ({ health: Math.max(0, state.health - 5) }))\n            }\n          }\n\n          if (get().health === 0) {\n            set(() => ({ menu: 'dead' }))\n          }\n        })\n      },\n      shoot() {\n        set((state) => ({ lasers: [...state.lasers, Date.now()] }))\n        clearTimeout(cancelLaserTO)\n        cancelLaserTO = setTimeout(() => set((state) => ({ lasers: state.lasers.filter((t) => Date.now() - t <= 1000) })), 1000)\n        playAudio(audio.zap, 0.5)\n      },\n      updateMouse({ clientX: x, clientY: y }) {\n        get().mutation.mouse.set(x - window.innerWidth / 2, y - window.innerHeight / 2)\n      },\n      test(data) {\n        box.min.copy(data.offset)\n        box.max.copy(data.offset)\n        box.expandByScalar(data.size * data.scale)\n        data.hit.set(10000, 10000, 10000)\n        const result = get().mutation.ray.intersectBox(box, data.hit)\n        data.distance = get().mutation.ray.origin.distanceTo(data.hit)\n        return result\n      }\n    }\n  }\n})\n\nfunction randomData(count, track, radius, size, scale) {\n  return new Array(count).fill().map(() => {\n    const t = Math.random()\n    const pos = track.parameters.path.getPointAt(t)\n    pos.multiplyScalar(15)\n    const offset = pos\n      .clone()\n      .add(new THREE.Vector3(-radius + Math.random() * radius * 2, -radius + Math.random() * radius * 2, -radius + Math.random() * radius * 2))\n    const speed = 0.1 + Math.random()\n    return { guid: guid++, scale: typeof scale === 'function' ? scale() : scale, size, offset, pos, speed, radius, t, hit: new THREE.Vector3(), distance: 1000 }\n  })\n}\n\nfunction randomRings(count, track) {\n  let temp = []\n  let t = 0.4\n  for (let i = 0; i < count; i++) {\n    t += 0.003\n    const pos = track.parameters.path.getPointAt(t)\n    pos.multiplyScalar(15)\n    const segments = track.tangents.length\n    const pickt = t * segments\n    const pick = Math.floor(pickt)\n    const lookAt = track.parameters.path.getPointAt((t + 1 / track.parameters.path.getLength()) % 1).multiplyScalar(15)\n    const matrix = new THREE.Matrix4().lookAt(pos, lookAt, track.binormals[pick])\n    temp.push([pos.toArray(), matrix])\n  }\n  return temp\n}\n\nfunction reset() {\n  useStore.setState({ menu: 'game', health: 100 })\n}\n\nfunction playAudio(audio, volume = 1, loop = false) {\n  audio.currentTime = 0\n  audio.volume = volume\n  audio.loop = loop\n  audio.play()\n}\n\nexport default useStore\nexport { audio, playAudio, reset }\n","import React, { useRef, useEffect } from 'react'\nimport useStore from '../store'\n\nexport default function Particles() {\n  const instancedMesh = useRef()\n  const { particles, dummy } = useStore((state) => state.mutation)\n\n  useEffect(() => {\n    particles.forEach((particle, i) => {\n      const { offset, scale } = particle\n      dummy.position.copy(offset)\n      dummy.scale.set(scale, scale, scale)\n      dummy.rotation.set(Math.sin(Math.random()) * Math.PI, Math.sin(Math.random()) * Math.PI, Math.cos(Math.random()) * Math.PI)\n      dummy.updateMatrix()\n      instancedMesh.current.setMatrixAt(i, dummy.matrix)\n    })\n    instancedMesh.current.instanceMatrix.needsUpdate = true\n  }, [])\n\n  return (\n    <instancedMesh ref={instancedMesh} args={[null, null, particles.length]} frustumCulled={false}>\n      <coneGeometry args={[2, 2, 3]} />\n      <meshStandardMaterial color=\"#606060\" />\n    </instancedMesh>\n  )\n}\n","import React, { useRef } from 'react'\nimport { useFrame, useLoader } from '@react-three/fiber'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport useStore from '../store'\n\nexport default function Rocks() {\n  const gltf = useLoader(GLTFLoader, '/rylos-space-adventure/rock.gltf')\n  const rocks = useStore((state) => state.rocks)\n  return rocks.map((data) => <Rock {...gltf} key={data.guid} data={data} />)\n}\n\nconst Rock = React.memo(({ nodes, materials, data }) => {\n  const ref = useRef()\n  const { clock } = useStore((state) => state.mutation)\n  useFrame(() => {\n    try {\n      const r = Math.cos((clock.getElapsedTime() / 2) * data.speed) * Math.PI\n      ref.current.rotation.set(r, r, r)\n    } catch (err) {}\n  })\n  return (\n    <group ref={ref} position={data.offset} scale={[data.scale, data.scale, data.scale]}>\n      <group\n        position={[-0.016298329457640648, -0.012838120572268963, 0.24073271453380585]}\n        rotation={[3.0093872578726644, 0.27444228385461117, -0.22745113653772078]}\n        scale={[20, 20, 20]}>\n        <mesh geometry={nodes.node_id4_Material_52_0.geometry} material={materials.Material_52} material-roughness={1} material-metalness={1} />\n      </group>\n    </group>\n  )\n})\n","import * as THREE from 'three'\nimport React, { useRef, useMemo, useEffect } from 'react'\nimport { useFrame } from '@react-three/fiber'\nimport useStore, { audio, playAudio } from '../store'\n\nfunction make(color, speed) {\n  return {\n    ref: React.createRef(),\n    color,\n    data: new Array(20)\n      .fill()\n      .map(() => [\n        new THREE.Vector3(),\n        new THREE.Vector3(-1 + Math.random() * 2, -1 + Math.random() * 2, -1 + Math.random() * 2).normalize().multiplyScalar(speed * 0.75)\n      ])\n  }\n}\n\nexport default function Explosions() {\n  const explosions = useStore((state) => state.explosions)\n  return explosions.map(({ guid, offset, scale }) => <Explosion key={guid} position={offset} scale={scale * 0.75} />)\n}\n\nfunction Explosion({ position, scale }) {\n  const group = useRef()\n  const { dummy } = useStore((state) => state.mutation)\n  const particles = useMemo(() => [make('white', 0.8), make('orange', 0.6)], [])\n\n  useEffect(() => void playAudio(new Audio(audio.mp3.explosion), 0.5), [])\n\n  useFrame(() => {\n    particles.forEach(({ data }, type) => {\n      try {\n        const mesh = group.current.children[type]\n        data.forEach(([vec, normal], i) => {\n          vec.add(normal)\n          dummy.position.copy(vec)\n          dummy.updateMatrix()\n          mesh.setMatrixAt(i, dummy.matrix)\n        })\n        mesh.material.opacity -= 0.025\n        mesh.instanceMatrix.needsUpdate = true\n      } catch (err) {}\n    })\n  })\n\n  return (\n    <group ref={group} position={position} scale={[scale, scale, scale]}>\n      {particles.map(({ color, data }, index) => (\n        <instancedMesh key={index} args={[null, null, data.length]} frustumCulled={false}>\n          <dodecahedronGeometry args={[10, 0]} />\n          <meshBasicMaterial color={color} transparent opacity={1} fog={false} />\n        </instancedMesh>\n      ))}\n    </group>\n  )\n}\n","import React from 'react'\nimport useStore from '../store'\n\nexport default function Track() {\n  const { scale, track } = useStore((state) => state.mutation)\n  return (\n    <mesh scale={[scale, scale, scale]} geometry={track}>\n      <meshBasicMaterial color=\"#9b51e0\" />\n    </mesh>\n  )\n}\n","import * as THREE from 'three'\nimport React, { useRef } from 'react'\nimport { useLoader, useFrame } from '@react-three/fiber'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport useStore from '../store'\n\nconst geometry = new THREE.BoxBufferGeometry(1, 1, 40)\nconst lightgreen = new THREE.Color('lightgreen')\nconst hotpink = new THREE.Color('hotpink')\nconst laserMaterial = new THREE.MeshBasicMaterial({ color: lightgreen })\nconst crossMaterial = new THREE.MeshBasicMaterial({ color: hotpink, fog: false })\nconst position = new THREE.Vector3()\nconst direction = new THREE.Vector3()\n\nexport default function Ship() {\n  const { nodes } = useLoader(GLTFLoader, '/rylos-space-adventure/ship.gltf')\n  const mutation = useStore((state) => state.mutation)\n  const { clock, mouse, ray } = mutation\n  const lasers = useStore((state) => state.lasers)\n  const main = useRef()\n  const laserGroup = useRef()\n  const laserLight = useRef()\n  const exhaust = useRef()\n  const cross = useRef()\n  const target = useRef()\n\n  useFrame(() => {\n    main.current.position.z = Math.sin(clock.getElapsedTime() * 40) * Math.PI * 0.2\n    main.current.rotation.z += (mouse.x / 500 - main.current.rotation.z) * 0.2\n    main.current.rotation.x += (-mouse.y / 1200 - main.current.rotation.x) * 0.2\n    main.current.rotation.y += (-mouse.x / 1200 - main.current.rotation.y) * 0.2\n    main.current.position.x += (mouse.x / 10 - main.current.position.x) * 0.2\n    main.current.position.y += (25 + -mouse.y / 10 - main.current.position.y) * 0.2\n    exhaust.current.scale.x = 1 + Math.sin(clock.getElapsedTime() * 200)\n    exhaust.current.scale.y = 1 + Math.sin(clock.getElapsedTime() * 200)\n    exhaust.current.scale.x = 0.01\n    exhaust.current.scale.y = 0.01\n    for (let i = 0; i < lasers.length; i++) {\n      const group = laserGroup.current.children[i]\n      group.position.z -= 20\n    }\n    laserLight.current.intensity += ((lasers.length && Date.now() - lasers[lasers.length - 1] < 100 ? 20 : 0) - laserLight.current.intensity) * 0.3\n\n    // Get ships orientation and save it to the stores ray\n    main.current.getWorldPosition(position)\n    main.current.getWorldDirection(direction)\n    ray.origin.copy(position)\n    ray.direction.copy(direction.negate())\n\n    // ...\n    crossMaterial.color = mutation.hits ? lightgreen : hotpink\n    cross.current.visible = !mutation.hits\n    target.current.visible = !!mutation.hits\n  })\n\n  return (\n    <group ref={main}>\n      <group scale={[3.5, 3.5, 3.5]}>\n        <group ref={cross} position={[0, 0, -300]} name=\"cross\">\n          <mesh renderOrder={1000} material={crossMaterial}>\n            <boxGeometry args={[20, 2, 2]} />\n          </mesh>\n          <mesh renderOrder={1000} material={crossMaterial}>\n            <boxGeometry args={[2, 20, 2]} />\n          </mesh>\n        </group>\n        <group ref={target} position={[0, 0, -300]} name=\"target\">\n          <mesh position={[0, 20, 0]} renderOrder={1000} material={crossMaterial}>\n            <boxGeometry args={[40, 2, 2]} />\n          </mesh>\n          <mesh position={[0, -20, 0]} renderOrder={1000} material={crossMaterial}>\n            <boxGeometry args={[40, 2, 2]} />\n          </mesh>\n          <mesh position={[20, 0, 0]} renderOrder={1000} material={crossMaterial}>\n            <boxGeometry args={[2, 40, 2]} />\n          </mesh>\n          <mesh position={[-20, 0, 0]} renderOrder={1000} material={crossMaterial}>\n            <boxGeometry args={[2, 40, 2]} />\n          </mesh>\n        </group>\n        <pointLight ref={laserLight} position={[0, 0, -20]} distance={100} intensity={0} color=\"lightgreen\" />\n        <group ref={laserGroup}>\n          {lasers.map((t, i) => (\n            <group key={i}>\n              <mesh position={[-2.8, 0, -0.8]} geometry={geometry} material={laserMaterial} />\n              <mesh position={[2.8, 0, -0.8]} geometry={geometry} material={laserMaterial} />\n            </group>\n          ))}\n        </group>\n        <group rotation={[Math.PI / 2, Math.PI, 0]}>\n          <mesh name=\"Renault_(S,_T1)_0\" geometry={nodes['Renault_(S,_T1)_0'].geometry}>\n            <meshStandardMaterial color=\"#070707\" />\n          </mesh>\n          <mesh name=\"Renault_(S,_T1)_1\" geometry={nodes['Renault_(S,_T1)_1'].geometry}>\n            <meshStandardMaterial color=\"black\" />\n          </mesh>\n          <mesh name=\"Renault_(S,_T1)_2\" geometry={nodes['Renault_(S,_T1)_2'].geometry}>\n            <meshStandardMaterial color=\"#070707\" />\n          </mesh>\n          <mesh name=\"Renault_(S,_T1)_3\" geometry={nodes['Renault_(S,_T1)_3'].geometry}>\n            <meshBasicMaterial color=\"lightblue\" />\n          </mesh>\n          <mesh name=\"Renault_(S,_T1)_4\" geometry={nodes['Renault_(S,_T1)_4'].geometry}>\n            <meshBasicMaterial color=\"white\" />\n          </mesh>\n          <mesh name=\"Renault_(S,_T1)_5\" geometry={nodes['Renault_(S,_T1)_5'].geometry}>\n            <meshBasicMaterial color=\"teal\" />\n          </mesh>\n        </group>\n      </group>\n      <pointLight ref={exhaust} position={[0, 1, 30]} distance={100} intensity={2.5} color=\"white\" />\n      {/* <mesh ref={exhaust} scale={[1, 1, 30]} position={[0, 1, 30]}>\n        <dodecahedronBufferGeometry opacity={0} args={[1.5, 0]} />\n        <meshBasicMaterial opacity={0} color=\"lightblue\" />\n      </mesh> */}\n    </group>\n  )\n}\n","import React, { useRef } from 'react'\nimport { useThree, useFrame } from '@react-three/fiber'\nimport useStore from '../store'\n\nlet offset = 0\nexport default function Rig({ children }) {\n  const group = useRef()\n  const rig = useRef()\n  const mutation = useStore((state) => state.mutation)\n  const { fov, scale, binormal, normal, track, mouse } = mutation\n  const { camera } = useThree()\n\n  useFrame(() => {\n    const t = mutation.t\n    const pos = mutation.position.clone()\n    const segments = track.tangents.length\n    const pickt = t * segments\n    const pick = Math.floor(pickt)\n    const pickNext = (pick + 1) % segments\n    binormal.subVectors(track.binormals[pickNext], track.binormals[pick])\n    binormal.multiplyScalar(pickt - pick).add(track.binormals[pick])\n    const dir = track.parameters.path.getTangentAt(t)\n    offset += (Math.max(15, 15 + -mouse.y / 20) - offset) * 0.05\n    normal.copy(binormal).cross(dir)\n    pos.add(normal.clone().multiplyScalar(offset))\n    camera.position.copy(pos)\n    const lookAt = track.parameters.path.getPointAt((t + 30 / track.parameters.path.getLength()) % 1).multiplyScalar(scale)\n    camera.matrix.lookAt(camera.position, lookAt, normal)\n    camera.quaternion.setFromRotationMatrix(camera.matrix)\n    camera.fov += ((t > 0.4 && t < 0.45 ? 120 : fov) - camera.fov) * 0.05\n    camera.updateProjectionMatrix()\n    const lightPos = track.parameters.path.getPointAt((t + 1 / track.parameters.path.getLength()) % 1).multiplyScalar(scale)\n    group.current.position.copy(lightPos)\n    group.current.quaternion.setFromRotationMatrix(camera.matrix)\n  })\n\n  return (\n    <group ref={group}>\n      <pointLight distance={400} position={[0, 100, -420]} intensity={5} color=\"#9b51e0\" />\n      <group ref={rig} position={[0, 0, -50]}>\n        {children}\n      </group>\n    </group>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/rewind.4cd5b907.svg\";","export default __webpack_public_path__ + \"static/media/play.496c51e4.svg\";","import rewindIcon from './images/rewind.svg'\nimport playIcon from './images/play.svg'\nimport React from 'react'\nimport { soundTrack } from './audio'\nimport { useEffect, useState } from 'react'\n\nexport const Radio = () => {\n  const [currentSoundtrackIndex, setCurrentSoundtrackIndex] = useState(0)\n  const audioElement = useState(new Audio(soundTrack[currentSoundtrackIndex].songSrc))[0]\n  const currentTrack = soundTrack[currentSoundtrackIndex]\n\n  useEffect(() => {\n    audioElement.play()\n  }, [])\n\n  useEffect(() => {\n    audioElement.pause()\n    audioElement.setAttribute('src', soundTrack[currentSoundtrackIndex].songSrc)\n    audioElement.load()\n    audioElement.play()\n  }, [currentSoundtrackIndex])\n\n  const prev = () => setCurrentSoundtrackIndex(Math.max(currentSoundtrackIndex - 1, 0))\n  const next = () => setCurrentSoundtrackIndex(Math.min(currentSoundtrackIndex + 1, soundTrack.length - 1))\n\n  const toggle = () => {\n    const isPlaying = audioElement.duration > 0 && !audioElement.paused\n    if (isPlaying) {\n      audioElement.pause()\n    } else {\n      audioElement.play()\n    }\n  }\n\n  return (\n    <div id=\"radio\">\n      <div id=\"top-row\">\n        <div id=\"now-playing\">\n          <span>{currentTrack ? currentTrack.songName : '- Not playing -'}</span>\n        </div>\n      </div>\n      <div id=\"radio-actions\">\n        <button>\n          <img onClick={prev} src={rewindIcon} />\n        </button>\n        <button onClick={toggle}>\n          <img src={playIcon} />\n        </button>\n        <button>\n          <img onClick={next} src={rewindIcon} />\n        </button>\n      </div>\n    </div>\n  )\n}\n","import React, { useMemo, useRef, useEffect } from 'react'\nimport styled, { css, createGlobalStyle } from 'styled-components'\nimport useStore from './store'\nimport { Radio } from './Radio'\n\nexport default function Hud() {\n  const points = useStore((state) => state.points)\n  const immunity = useStore((state) => state.immunity)\n  const health = useStore((state) => state.health)\n  const sound = useStore((state) => state.sound)\n  const toggle = useStore((state) => state.actions.toggleSound)\n  const score = useMemo(() => (points >= 1000 ? (points / 1000).toFixed(1) + 'K' : points), [points])\n\n  return (\n    <>\n      <UpperLeft onClick={() => toggle()}>\n        <div id=\"health-container\">\n          <div id=\"health-value\" style={{ backgroundColor: immunity ? 'blue' : 'green', width: `${immunity ? 100 : health}%` }}>\n            {immunity ? `Shield` : `HP ${health}%`}\n          </div>\n        </div>\n      </UpperLeft>\n      <UpperRight>\n        <a target=\"_blank\" href=\"https://www.rylosplanet.fi/\">\n          Rylos Planet\n        </a>\n      </UpperRight>\n      <LowerLeft>\n        <h1>{score}</h1>\n      </LowerLeft>\n      <Global />\n      <LowerRight>\n        <Radio />\n      </LowerRight>\n    </>\n  )\n}\n\nconst base = css`\n  font-family: 'Sedgwick Ave', sans-serif;\n  position: absolute;\n  text-transform: uppercase;\n  font-weight: 900;\n  font-variant-numeric: slashed-zero tabular-nums;\n  line-height: 1em;\n  pointer-events: none;\n  color: #9b51e0;\n`\n\nconst UpperLeft = styled.div`\n  ${base}\n  top: 40px;\n  left: 50px;\n  font-size: 2em;\n  transform: skew(5deg, 5deg);\n  pointer-events: all;\n  cursor: pointer;\n  @media only screen and (max-width: 900px) {\n    font-size: 1.5em;\n  }\n`\n\nconst UpperRight = styled.div`\n  ${base}\n  text-align: right;\n  top: 40px;\n  right: 50px;\n  font-size: 2em;\n  transform: skew(-5deg, -5deg);\n  pointer-events: all;\n  cursor: pointer;\n  & > a {\n    color: #9b51e0;\n    text-decoration: none;\n  }\n  @media only screen and (max-width: 900px) {\n    font-size: 1.5em;\n  }\n`\n\nconst LowerLeft = styled.div`\n  ${base}\n  bottom: 50px;\n  left: 50px;\n  transform: skew(-5deg, -5deg);\n  width: 200px;\n  & > h1 {\n    margin: 0;\n    font-size: 6em;\n    line-height: 1em;\n  }\n  & > h2 {\n    margin: 0;\n    font-size: 4em;\n    line-height: 1em;\n  }\n  @media only screen and (max-width: 900px) {\n    bottom: 30px;\n    & > h1 {\n      font-size: 6em !important;\n    }\n    & > h2 {\n      font-size: 3em !important;\n    }\n  }\n`\n\nconst LowerRight = styled.div`\n  ${base}\n  bottom: 50px;\n  right: 50px;\n  transform: skew(5deg, 5deg);\n  background: black;\n\n  @media only screen and (max-width: 900px) {\n    bottom: 50px;\n    height: 40px;\n    width: 150px;\n  }\n`\n\nconst Global = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n  }\n\n  html,\n  body,\n  #root {\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n    user-select: none;\n    overflow: hidden;\n  }\n\n  #root {\n    overflow: auto;\n    padding: 0px;\n  }\n\n  body {\n    position: fixed;\n    overflow: hidden;\n    overscroll-behavior-y: none;\n    font-family: -apple-system, BlinkMacSystemFont, avenir next, avenir, helvetica neue, helvetica, ubuntu, roboto, noto, segoe ui, arial, sans-serif;\n    color: black;\n    background: white;\n  }\n`\n","export default __webpack_public_path__ + \"static/media/rylos-logo.46173d62.png\";","import * as THREE from 'three'\nimport React, { Suspense } from 'react'\nimport { Canvas } from '@react-three/fiber'\nimport Stars from './3d/Stars'\nimport Planets from './3d/Planets'\nimport Effects from './3d/Effects'\nimport Particles from './3d/Particles'\n// import Enemies from './3d/Enemies'\nimport Rocks from './3d/Rocks'\nimport Explosions from './3d/Explosions'\n// import Rings from './3d/Rings'\nimport Track from './3d/Track'\nimport Ship from './3d/Ship'\nimport Rig from './3d/Rig'\nimport Hud from './Hud'\nimport useStore, { reset } from './store'\nimport rylosLogo from './images/rylos-logo.png'\nimport { css } from 'styled-components'\n\nconst Menu = (props) => {\n  return (\n    <div id=\"menu\" style={{ backgroundImage: `url(${rylosLogo})` }}>\n      <div id=\"menu-content\">{props.children}</div>\n    </div>\n  )\n}\n\nexport const baseCss = css`\n  font-family: 'Sedgwick Ave', sans-serif;\n  position: absolute;\n  text-transform: uppercase;\n  font-weight: 900;\n  font-variant-numeric: slashed-zero tabular-nums;\n  line-height: 1em;\n  pointer-events: none;\n  color: #9b51e0;\n`\n\nexport default function App() {\n  const menu = useStore((state) => state.menu)\n  const { fov } = useStore((state) => state.mutation)\n  const actions = useStore((state) => state.actions)\n\n  if (menu === 'dead') {\n    return (\n      <Menu>\n        <h1>Game Over</h1>\n        <button id=\"menu-action\" onClick={reset}>\n          Restart\n        </button>\n      </Menu>\n    )\n  }\n\n  if (menu === 'game') {\n    return (\n      <div onPointerMove={actions.updateMouse} onClick={actions.shoot}>\n        <Canvas\n          linear\n          mode=\"concurrent\"\n          dpr={[1, 1.5]}\n          gl={{ antialias: false }}\n          camera={{ position: [0, 0, 2000], near: 0.01, far: 10000, fov }}\n          onCreated={({ gl, camera }) => {\n            actions.init(camera)\n            gl.toneMapping = THREE.CineonToneMapping\n            gl.setClearColor(new THREE.Color('#020209'))\n          }}>\n          <fog attach=\"fog\" args={['#070710', 100, 700]} />\n          <ambientLight intensity={0.25} />\n          <Stars />\n          <Explosions />\n          <Track />\n          <Particles />\n          {/* <Rings /> */}\n          <Suspense fallback={null}>\n            <Rocks />\n            <Planets />\n            {/* <Enemies /> */}\n            <Rig>\n              <Ship />\n            </Rig>\n          </Suspense>\n          <Effects />\n        </Canvas>\n        <Hud />\n      </div>\n    )\n  }\n\n  return (\n    <Menu>\n      <button\n        onClick={() => {\n          actions.start()\n        }}\n        id=\"menu-action\">\n        Start Game\n      </button>\n    </Menu>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}